all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 1,2,3,4,5,6,7,8,9,10,11,12 ]
allSave [ 0 ]
current 0
next[ 1, 10 ]
path [ [ 0 ] ]
//const addExtraSplitIndex = if ( iteration === 0 && next verbindung an current endpunkt der ungleich current startPosition ist ) { true } else { false } = true
//const addExtraSplitIndex = if ( iteration === 0 && ((next.startPoint.x !== current.startPosition.x && next.startPoint.y !== current.startPosition.y) || (next.endPoint.x !== current.startPosition.x && next.endPoint.y !== current.startPosition.y)) ) { true } else { false } = true
splitpointsIndices [ { i:0 } ]
iteration 0++
index 0

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,5,6,7,8,9,10,11,12 ]
allSave [ 0, 1 ]
current 1
next[ 6, 2 ]
path [ [ 0, 1 ] ]
splitpointsIndices [ { i:0 }, { i:1 } ]
iteration 1++
index 0

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,5,7,8,9,10,11,12 ]
allSave [ 0, 1, 6 ]
current 6
next[ 7 ]
path [ [ 0, 1, 6 ] ]
splitpointsIndices [ { i:0 }, { i:1 } ]
iteration 2++
index 0

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,5,8,9,10,11,12 ]
allSave [ 0, 1, 6, 7 ]
current 7
next[ 9, 8 ]
path [ [ 0, 1, 6, 7 ] ]
splitpointsIndices [ { i:0 }, { i:1 }, { i:3 } ]
iteration 3++
index 0

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,5,8,10,11,12 ]
allSave [ 0, 1, 6, 7, 9 ]
current 9
next[ null ]
path [ [ 0, 1, 6, 7, 9 ] ]
splitpointsIndices [ { i:0 }, { i:1 }, { i:3 } ]
iteration 4++
index 0

//-------------------------------------------------------------
// Ende erreicht. Wo und wie geht´s weiter?

const diff = splitpointsIndices.length > 0 ? 1 : 0
const deadEnd = [ 9 ] // allSave[ 0, 1, 6, 7, 9 ] splice( { i:3 } + diff = 4 ) = 9

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 0,1,6,7,2,3,4,5,8,10,11,12 ] // ( allSave[0,1,6,7,9] - deadEnd[9] ) + allLookup[2,3,4,5,8,10,11,12]
allSave []
current 9
next[ null=0 ] // allLookup [ >0<,1,2,3,4,5,6,7,8,10,11,12 ]
path [ [ 0, 1, 6, 7, 9 ] ]
splitpointsIndices []
iteration 0
index 0++

if (next!==null) {
    continue <--
}else{
    break
}

//-------------------------------------------------------------

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 1,6,7,2,3,4,5,8,10,11,12 ]
allSave [ 0 ]
current 0
next[ 1, 10 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 ] ]
splitpointsIndices [ { i:0 } ]
iteration 0++
index 1

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 6,7,2,3,4,5,8,10,11,12 ]
allSave [ 0, 1 ]
current 1
next[ 6, 2 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1 ] ]
splitpointsIndices [ { i:0 }, { i:1 } ]
iteration 1++
index 1

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 7,2,3,4,5,8,10,11,12 ]
allSave [ 0, 1, 6 ]
current 6
next[ 7 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6 ] ]
splitpointsIndices [ { i:0 }, { i:1 } ]
iteration 2++
index 1

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,5,8,10,11,12 ]
allSave [ 0, 1, 6, 7 ]
current 7
next[ 8 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7 ] ]
splitpointsIndices [ { i:0 }, { i:1 } ]
iteration 3++
index 1

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,5,10,11,12 ]
allSave [ 0, 1, 6, 7, 8 ]
current 8
next[ null ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ] ]
splitpointsIndices [ { i:0 }, { i:1 } ]
iteration 4++
index 1

//-------------------------------------------------------------
// Ende erreicht. Wo und wie geht´s weiter?

const deadEnd = [ 6, 7, 8 ] // allSave [ 0, 1, 6, 7, 8 ] splice( { i:1 + 1 } ) = 6, 7, 8

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 0,1,2,3,4,5,10,11,12 ] // ( allSave[0,1,6,7,8] - deadEnd[6,7,8] ) + allLookup[2,3,4,5,10,11,12]
allSave []
current 8
next[ null=0 ] // allLookup [ >0<,1,2,3,4,5,10,11,12 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7 ] ]
splitpointsIndices []
iteration 0
index 1++

if (next!==null) {
    continue <--
}else{
    break
}

//-------------------------------------------------------------

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 1,2,3,4,5,10,11,12 ]
allSave [ 0 ]
current 0
next[ 1, 10 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0 ] ]
splitpointsIndices [ { i:0 } ]
iteration 0++
index 2

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,5,10,11,12 ]
allSave [ 0, 1 ]
current 1
next[ 2 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1 ] ]
splitpointsIndices [ { i:0 } ]
iteration 1++
index 2

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 3,4,5,10,11,12 ]
allSave [ 0, 1, 2 ]
current 2
next[ 5,3 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2 ] ]
splitpointsIndices [ { i:0 }, { i:2 } ]
iteration 2++
index 2

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 3,4,10,11,12 ]
allSave [ 0, 1, 2, 5 ]
current 5
next[ null ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ] ]
splitpointsIndices [ { i:0 }, { i:2 } ]
iteration 3++
index 2

//-------------------------------------------------------------
// Ende erreicht. Wo und wie geht´s weiter?

const deadEnd = [ 5 ] // allSave [ 0, 1, 2, 5 ] splice( { i:2 + 1 } ) = 5

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 0,1,2,3,4,10,11,12 ] // ( allSave[0,1,2,5] - deadEnd[5] ) + allLookup[3,4,10,11,12]
allSave []
current 5
next[ null=0 ] // allLookup [ >0<,1,2,3,4,10,11,12 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ] ]
splitpointsIndices []
iteration 0
index 2++

if (next!==null) {
    continue <--
}else{
    break
}

//-------------------------------------------------------------

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 1,2,3,4,10,11,12 ]
allSave [ 0 ]
current 0
next[ 1, 10 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0 ] ]
splitpointsIndices [ { i:0 } ]
iteration 0++
index 3

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 2,3,4,10,11,12 ]
allSave [ 0, 1 ]
current 1
next[ 2 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1 ] ]
splitpointsIndices [ { i:0 } ]
iteration 1++
index 3

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 3,4,10,11,12 ]
allSave [ 0, 1, 2 ]
current 2
next[ 3 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2 ] ]
splitpointsIndices [ { i:0 } ]
iteration 2++
index 3

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 4,10,11,12 ]
allSave [ 0, 1, 2, 3 ]
current 3
next[ 4 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3 ] ]
splitpointsIndices [ { i:0 } ]
iteration 3++
index 3

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 10,11,12 ]
allSave [ 0, 1, 2, 3, 4 ]
current 4
next[ null ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3, 4 ] ]
splitpointsIndices [ { i:0 } ]
iteration 4++
index 3

//-------------------------------------------------------------
// Ende erreicht. Wo und wie geht´s weiter?

const deadEnd = [ 1, 2, 3, 4 ] // allSave [ 0, 1, 2, 3, 4 ] splice( { i:0 + 1 } ) = 1, 2, 3, 4

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 0,10,11,12 ] // ( allSave[0,1,2,3,4] - deadEnd[1,2,3,4] ) + allLookup[10,11,12]
allSave []
current 4
next[ null=0 ] // allLookup [ >0<,10,11,12 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3, 4 ] ]
splitpointsIndices []
iteration 0
index 3++

if (next!==null) {
    continue <--
}else{
    break
}

//-------------------------------------------------------------

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 10,11,12 ]
allSave [ 0 ]
current 0
next[ 10 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3, 4 ], [ 0 ] ]
splitpointsIndices []
iteration 0++
index 4

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 11,12 ]
allSave [ 0, 10 ]
current 10
next[ 11 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3, 4 ], [ 0, 10 ] ]
splitpointsIndices []
iteration 1++
index 4

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [ 12 ]
allSave [ 0, 10, 11 ]
current 11
next[ 12 ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3, 4 ], [ 0, 10, 11 ] ]
splitpointsIndices []
iteration 2++
index 4

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [  ]
allSave [ 0, 10, 11, 12 ]
current 12
next[ null ]
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3, 4 ], [ 0, 10, 11, 12 ] ]
splitpointsIndices []
iteration 3++
index 4

//-------------------------------------------------------------
// Ende erreicht. Wo und wie geht´s weiter? Hier ist Ende!

const deadEnd = [ 0, 10, 11, 12 ] // allSave [ 0, 10, 11, 12 ] splice( 0 ) = 0, 10, 11, 12

all [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
allLookup [] // ( allSave[0,10,11,12] - deadEnd[0,10,11,12] ) + allLookup[]
allSave []
current 12
next[ null=null ] // allLookup []
path [ [ 0, 1, 6, 7, 9 ], [ 0 , 1, 6, 7, 8 ], [ 0, 1, 2, 5 ], [ 0, 1, 2, 3, 4 ], [ 0, 10, 11, 12 ] ] <-- Endergebnis. 
splitpointsIndices []
iteration 0
index 4++

if (next!==null) {
    continue
}else{
    break<--
}

//-------------------------------------------------------------











































































































[ 10 ]
[ 0 ]

[ 10 ]
[ 0, 1 ]

[ 10 ]
[ 0, 1, 6 ]

[ 10 ]
[ 0, 1, 6, 7 ]

[ 10 ]
[ 0, 1, 6, 7, 9 ]









(1)
    [ pathSegments ]       = [ <0>,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ >0<,>1< ]
    { pathSegmentCurrent } = >0<
    [ next ] = [ <10>,<1> ]
    [ path ] = [ >0< ]
    { nextPathSegment } = >10<
    [] = [ >0< ]
    //root = true;
    iteration = <0>++
    [ split indices ] = [ >0< ]

(2)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9,<10>,11,12 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 0,1 ]
    { pathSegmentCurrent } = >10<
    [ next ] = [ <11> ]
    [ path ] = [ 0, >10< ]
    { nextPathSegment } = >11<
    [] = [ 0, >10< ]
    //root = true;
    iteration = 1++
    [ split indices ] = [ 0 ]

(3)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9,<11>,12 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 0,1 ]
    { pathSegmentCurrent } = >11<
    [ next ] = [ <12> ]
    [ path ] = [ 0, 10, >11< ]
    { nextPathSegment } = >12<
    [] = [ 0, 10, >11< ]
    //root = true;
    iteration = 2++
    [ split indices ] = [ 0 ]

(4)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9,<12> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ <0>,1 ]
    { pathSegmentCurrent } = >12<
    [ next ] = [ <null> ]
    [ path ] = [ 0, 10, 11, >12< ] // <--- END
    { nextPathSegment } = >0<
    [] = [ 0, 10, 11, >12< ]
    //root = <true>;
    iteration = 0++
    [ split indices ] = [ 0 ]

(5)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ <1> ]
    { pathSegmentCurrent } = >0<
    [ next ] = [ <1> ]
    [ path ] = [ >0< ]
    { nextPathSegment } = >1<
    [] = [ >0< ]
    //root = false;
    iteration = 1++
    [ split indices ] = [ 0 ]

(6)
    [ pathSegments ]       = [ <1>,2,3,4,5,6,7,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ <6>,2 ]
    { pathSegmentCurrent } = >1<
    [ next ] = [ <6>,2 ]
    [ path ] = [ 0, >1< ]
    { nextPathSegment } = >6<
    [] = [ 0, >1< ]
    //root = false;
    iteration = <2>++
    [ split indices ] = [ 0, 2 ]

(7)
    [ pathSegments ]       = [ 2,3,4,5,<6>,7,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2 ]
    { pathSegmentCurrent } = >6<
    [ next ] = [ <7> ]
    [ path ] = [ 0, 1, >6<  ]
    { nextPathSegment } = >7<
    [] = [ 0, 1, >6< ]
    //root = false;
    iteration = 3++
    [ split indices ] = [ 0, 2 ]

(8)
    [ pathSegments ]       = [ 2,3,4,5,<7>,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2, >8< ]
    { pathSegmentCurrent } = >7<
    [ next ] = [ <9>, <8> ]
    [ path ] = [ 0, 1, 6, >7<  ]
    { nextPathSegment } = >9<
    [] = [ 0, 1, 6, >7< ]
    //root = false;
    iteration = <4>++
    [ split indices ] = [ 0, 2, 4 ]

(9)
    [ pathSegments ]       = [ 2,3,4,5,8,<9> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2, 8 ]
    { pathSegmentCurrent } = >9<
    [ next ] = [ null ]
    [ path ] = [ 0, 1, 6, 7, >9<  ] // <--- END
    { nextPathSegment } = >0<
    [] = [ 0, 1, 6, 7, >9< ]
    //root = false;
    iteration = 0++
    [ split indices ] = [ 0, 2, 4 ]

(10)
    [ pathSegments ]       = [ 2,3,4,5,8 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2, 8 ]
    { pathSegmentCurrent } = >0<
    [ next ] = [ >1< ]
    [ path ] = [ >0<  ]
    { nextPathSegment } = >0<
    [] = [ <0>, <<1>>, 6, 7 ]
    //root = false;
    iteration = 1++
    [ split indices ] = [ 0, 2 ]

(11)
    [ pathSegments ]       = [ 2,3,4,5,8 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2, 8 ]
    { pathSegmentCurrent } = >1<
    [ next ] = [ >6< ]
    [ path ] = [ 0, >1<  ]
    { nextPathSegment } = >0<
    [] = [ <1>, <<6>>, 7 ]
    //root = false;
    iteration = 2++
    [ split indices ] = [ 0, 2 ]

(11)
    [ pathSegments ]       = [ 2,3,4,5,8 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2, 8 ]
    { pathSegmentCurrent } = >6<
    [ next ] = [ >7< ]
    [ path ] = [ 0, 1, >6< ]
    { nextPathSegment } = >7<
    [] = [ <6>, <<7>> ]
    //root = false;
    iteration = 3++
    [ split indices ] = [ 0, 2 ]

(12)
    [ pathSegments ]       = [ 2,3,4,5,<8> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2, 8 ]
    { pathSegmentCurrent } = >7<
    [ next ] = [ >8< ]
    [ path ] = [ 0, 1, 6, >7< ]
    { nextPathSegment } = >8<
    [] = [ <7> ]
    //root = false;
    iteration = 3++
    [ split indices ] = [ 0, 2 ]

(12)
    [ pathSegments ]       = [ 2,3,4,5 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 2, 8 ]
    { pathSegmentCurrent } = >8<
    [ next ] = [ null ]
    [ path ] = [ 0, 1, 6, 7, >8< ]
    { nextPathSegment } = >8<
    [] = []
    //root = false;
    iteration = 3++
    [ split indices ] = [ 0, 2 ]
















(1)
    [ pathSegments ]       = [ <0>,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ >0< ]
    { pathSegmentCurrent } = >0<
    [ next ] = [ <10>,1 ]
    [ path ] = [ >0< ]
    { nextPathSegment } = >10<
    [] = []

(2)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9,<10>,11,12 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 0 ]
    { pathSegmentCurrent } = >10<
    [ next ] = [ <11> ]
    [ path ] = [ 0, >10< ]
    { nextPathSegment } = >11<
    [] = []

(3)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9,<11>,12 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 0 ]
    { pathSegmentCurrent } = >11<
    [ next ] = [ <12> ]
    [ path ] = [ 0, 10, >11< ]
    { nextPathSegment } = >12<
    [] = []

(4)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9,<12> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ 0 ]
    { pathSegmentCurrent } = >12<
    [ next ] = [ <null> ]
    [ path ] = [ 0, 10, 11, >12< ] // <--- END
    { nextPathSegment } = >0<
    [] = []

(5)
    [ pathSegments ]       = [ 1,2,3,4,5,6,7,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = [ <0> ]
    { pathSegmentCurrent } = >12<
    [ next ] = [ <null> ]
    [ path ] = [ >0< ]
    { nextPathSegment } = >0<
    [] = []

(6)
    [ pathSegments ]       = [ <1>,2,3,4,5,6,7,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >1<
    [ next ] = [ <6>,2 ]
    [ path ] = [ 0, >1< ]
    { nextPathSegment } = >6<
    [] = []

(7)
    [ pathSegments ]       = [ 2,3,4,5,<6>,7,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >6<
    [ next ] = [ <7> ]
    [ path ] = [ 0, 1, >6< ]
    { nextPathSegment } = >7<
    [] = []

(8)
    [ pathSegments ]       = [ 2,3,4,5,<7>,8,9 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >7<
    [ next ] = [ <9>,8 ]
    [ path ] = [ 0, 1, 6, >7< ]
    { nextPathSegment } = >9<
    [] = []

(9)
    [ pathSegments ]       = [ 2,3,4,5,8,<9> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >9<
    [ next ] = [ null ]
    [ path ] = [ 0, 1, 6, 7, >9< ] // <--- END
    { nextPathSegment } = >0<
    [] = []

(10)
    [ pathSegments ]       = [ 2,3,4,5,8 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >0<
    [ next ] = [ <1> ]
    [ path ] = [ >0< ]
    { nextPathSegment } = >1<
    [] = []

(11)
    [ pathSegments ]       = [ 2,3,4,5,8 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >1<
    [ next ] = [ <6> ]
    [ path ] = [ 0, >1< ]
    { nextPathSegment } = >6<
    [] = []

(12)
    [ pathSegments ]       = [ 2,3,4,5,8 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >6<
    [ next ] = [ <7> ]
    [ path ] = [ 0, 1, >6< ]
    { nextPathSegment } = >7<
    [] = []

(13)
    [ pathSegments ]       = [ 2,3,4,5,8 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >6<
    [ next ] = [ <8> ]
    [ path ] = [ 0, 1, 6, >7< ]
    { nextPathSegment } = >8<
    [] = []

(14)
    [ pathSegments ]       = [ 2,3,4,5,<8> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >8<
    [ next ] = [ null ]
    [ path ] = [ 0, 1, 6, 7, >8< ] // <--- END
    { nextPathSegment } = >0<
    [] = []

(15)
    [ pathSegments ]       = [ 2,3,4,5 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >0<
    [ next ] = [ <1> ]
    [ path ] = [ >0< ]
    { nextPathSegment } = >1<
    [] = []

(16)
    [ pathSegments ]       = [ 2,3,4,5 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >1<
    [ next ] = [ <2> ]
    [ path ] = [ 0, >1< ]
    { nextPathSegment } = >2<
    [] = []

(17)
    [ pathSegments ]       = [ <2>,3,4,5 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >2<
    [ next ] = [ <5>,3 ]
    [ path ] = [ 0, 1, >2< ]
    { nextPathSegment } = >5<
    [] = []

(18)
    [ pathSegments ]       = [ 3,4,<5> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >5<
    [ next ] = [ <5>,3 ]
    [ path ] = [ 0, 1, 2, >5< ] // <--- END
    { nextPathSegment } = >0<
    [] = []

(19)
    [ pathSegments ]       = [ 3,4 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >0<
    [ next ] = [ <1> ]
    [ path ] = [ >0< ]
    { nextPathSegment } = >1<
    [] = []

(20)
    [ pathSegments ]       = [ 3,4 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >1<
    [ next ] = [ <2> ]
    [ path ] = [ 0, >1< ]
    { nextPathSegment } = >2<
    [] = []

(21)
    [ pathSegments ]       = [ 3,4 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >2<
    [ next ] = [ <3> ]
    [ path ] = [ 0, 1, >2< ]
    { nextPathSegment } = >3<
    [] = []

(22)
    [ pathSegments ]       = [ <3>,4 ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >3<
    [ next ] = [ <4> ]
    [ path ] = [ 0, 1, 2, >3< ]
    { nextPathSegment } = >4<
    [] = []

(23)
    [ pathSegments ]       = [ <4> ]
    [ pathSegmentsLookUp ] = [ 0,1,2,3,4,5,6,7,8,9,10,11,12 ]
    [] = []
    { pathSegmentCurrent } = >4<
    [ next ] = [ <null> ]
    [ path ] = [ 0, 1, 2, 3, >4< ] // <--- END
    { nextPathSegment } = null
    [] = []